<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[在Ubuntu上搭建Shadowsocks服务器以及优化]]></title>
      <url>http://jiashuai.me/2015/12/16/shadowsocks-ubuntu/</url>
      <content type="html"><![CDATA[<p>从前科学上网一直使用的是<a href="http://vpnso.com" target="_blank" rel="external">vpnso</a>,打开网页速度尚可，但是感觉带宽只有1Mbps左右，看YouTube视频和下载就有些吃力了。<br>毕竟对于科学上网来说，VPN还是有些大材小用。</p>
<p> Shadowsocks这种轻量级的代理更适合科学上网。要搭建Shadowsocks服务器，首先你要有一台国外的VPS，这里我选用了DigitalOcean的Sinapore节点，在优化以后可以达到8Mbps~10Mbps的带宽，还是很可观的。<br><a id="more"></a></p>
<h2 id="1-安装Shadowsocks"><a href="#1-安装Shadowsocks" class="headerlink" title="1. 安装Shadowsocks"></a>1. 安装Shadowsocks</h2><p>安装Shadowsocks很简单，首先安装<code>pip</code></p>
<p><pre>apt-get install python-pip</pre><br>然后使用<code>pip</code>安装Shadowsocks</p>
<p><pre>pip install shadowsocks</pre><br>安装完成</p>
<h2 id="2-Shadowsocks的配置和使用"><a href="#2-Shadowsocks的配置和使用" class="headerlink" title="2. Shadowsocks的配置和使用"></a>2. Shadowsocks的配置和使用</h2><p>推荐使用配置文件的方式启动，方便以后的查看和修改<code>vim /etc/shadowsocks.json</code></p>
<p>配置文件这样写<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"my_server_ip"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>:<span class="number">8388</span>,</span><br><span class="line">    <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"mypassword"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="string">"fast_open"</span>: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>完整的配置文件写法见<a href="https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File" target="_blank" rel="external">这里</a></p>
</blockquote>
<p>启动和停止Shadowsocks<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">shadowsocks -c /etc/shadowsocks.json -d start</span><br><span class="line">shadowsocks -d stop</span><br></pre></td></tr></table></figure></p>
<p><code>-d</code>参数的作用是把shadowsocks作为后台daemon程序运行</p>
<blockquote>
<p>shadowsocks目前支持Windows/OSX/iOS/Android，客户端在<a href="https://github.com/shadowsocks/shadowsocks/wiki/Ports-and-Clients" target="_blank" rel="external">这里</a></p>
</blockquote>
<h2 id="3-Shadowsocks的优化"><a href="#3-Shadowsocks的优化" class="headerlink" title="3. Shadowsocks的优化"></a>3. Shadowsocks的优化</h2><p>推荐使用<strong><a href="http://my.serverspeeder.com/w.do?m=lsl" target="_blank" rel="external">锐速</a></strong></p>
<blockquote>
<p>锐速（ServerSpeeder）加速软件是一种基于ZETATCP加速引擎的软件，可以起到显著加速效果的TCP加速技术.</p>
</blockquote>
<p>首先确认你的Linux内核在锐速的<a href="http://my.serverspeeder.com/ls.do?m=availables" target="_blank" rel="external">支持列表</a>里，然后去注册一个锐速帐号</p>
<p>安装<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http://my.serverspeeder.com/d/ls/serverSpeederInstaller.tar.gz</span><br><span class="line">tar -xzf serverSpeederInstaller.tar.gz</span><br><span class="line">bash serverSpeederInstaller.sh</span><br></pre></td></tr></table></figure></p>
<p>输入用户名和密码以后一路enter确认用默认参数，最后会问你是否要开机启动和现在启动，推荐打开。</p>
<p>输入<code>lsmod</code>看到有<code>appex0</code>模块就是加速成功了。</p>
<p>我们继续修改一下锐速的参数<code>vim /serverspeeder/etc/config</code></p>
<p>其中<code>advinacc</code>,<code>maxmode</code>都改为1，DigitalOcean的网卡是支持<code>rsc</code>和<code>gso</code>加速的，我们也把它打开</p>
<p>最后重新加载一下配置</p>
<p><pre>service serverSpeeder reload</pre><br>打开YouTube测一下速，1080p视频几乎不需要缓冲<br><img src="/img/youtube1080p.png" alt="youtube"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网页源码获取小程序]]></title>
      <url>http://jiashuai.me/2015/03/22/%E7%BD%91%E9%A1%B5%E6%BA%90%E7%A0%81%E8%8E%B7%E5%8F%96%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>最近需要编写一个获取网页源代码的小程序，本来以为是很简单的事情，没有想到却出了一些意想不到的问题。最简单的方法，只要几行代码就能搞定了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HttpURLConnection connection = (HttpURLConnection) <span class="keyword">new</span> URL(<span class="string">"http://www.163.com"</span>).openConnection();</span><br><span class="line">InputStream inputStream = connection.getInputStream();</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line">StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">while</span> ( (len = inputStream.read(bytes)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    stringBuilder.append(<span class="keyword">new</span> String(bytes, <span class="number">0</span>, len));</span><br><span class="line">&#125;</span><br><span class="line">connection.disconnect();</span><br><span class="line">String text = stringBuilder.toString();</span><br><span class="line">System.out.println(text);</span><br></pre></td></tr></table></figure>
<p>很快我就发现了问题，有的网页编码是<code>UTF-8</code>，有的是<code>gb2312</code>。可是编码必须在读入之间就指定，这就有了矛盾。有没有这样一种编码，它可以无损转换到其他任何编码呢，有——<code>8859_1</code>。</p>
<a id="more"></a>
<p>思路就是，先统一用<code>8859_1</code>获取到网页的内容，然后转换成网页本来应该有的编码。</p>
<p>网页的编码会在<code>&lt;meta&gt;</code>标签里指定</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=gb2312"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用正则表达式匹配出标签中指定的编码，改进后的代码如下。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">decode</span><span class="params">(InputStream is)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[BLOCK_SIZE];</span><br><span class="line">        <span class="keyword">int</span> len, totalLen = <span class="number">0</span>;</span><br><span class="line">        StringBuilder tmpSb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        String head;</span><br><span class="line">        <span class="keyword">boolean</span> found = <span class="keyword">false</span>;</span><br><span class="line">        Pattern encodingPattern = Pattern.compile(ENCODING_TAG, Pattern.CASE_INSENSITIVE);</span><br><span class="line">        String encoding = DEFAULT_ENCODING;</span><br><span class="line">        <span class="keyword">while</span> ((len = is.read(bytes)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            totalLen += len;</span><br><span class="line">            sb.append(stripEmptyLine(<span class="keyword">new</span> String(bytes, <span class="number">0</span>, len, <span class="string">"8859_1"</span>)));</span><br><span class="line">            <span class="keyword">if</span> (!found) &#123;</span><br><span class="line">                Matcher m = encodingPattern.matcher(sb.toString());</span><br><span class="line">                <span class="keyword">if</span> (m.find()) &#123;</span><br><span class="line">                    found = <span class="keyword">true</span>;</span><br><span class="line">                    encoding = m.group(<span class="number">1</span>);</span><br><span class="line">                    System.out.println(encoding);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(sb.toString().getBytes(<span class="string">"8859_1"</span>), encoding);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>如此，我们就按照正确的编码方式获取到了网页的源码。 可是这还没完，我发现某些网站比较“坑”，比如 baidu.com，我获取到了这样一段东西，显然不是我想要的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"0;url=http://www.baidu.com/"</span>&gt;</span> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>其实他的意思是，0秒以后刷新，并且跳转到<code>http://www.baidu.com</code>。那么只要在获取到源码以后判断一下，如果有这样的标签就手动跳转。这次我用到了<a href="http://jsoup.org" target="_blank" rel="external">Jsoup</a>库。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">URL url = <span class="keyword">new</span> URL(pageURL);</span><br><span class="line">String text = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">boolean</span> needRefresh;</span><br><span class="line">do &#123;</span><br><span class="line">    needRefresh = <span class="keyword">false</span>;</span><br><span class="line">    HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">    connection.connect();</span><br><span class="line">    text = <span class="keyword">new</span> HtmlInputStreamDecoder().decode(connection.getInputStream());</span><br><span class="line">    String head = text.substring(<span class="number">0</span>, text.length()&gt;<span class="number">1000</span>?<span class="number">1000</span>:text.length());</span><br><span class="line">    Document doc = Jsoup.parse(head);</span><br><span class="line">    org.jsoup.select.Elements metas = doc.getElementsByTag(<span class="string">"meta"</span>);</span><br><span class="line">    <span class="keyword">for</span>(org.jsoup.nodes.Element meta:metas)&#123;</span><br><span class="line">        <span class="keyword">if</span> (meta.hasAttr(<span class="string">"http-equiv"</span>) &amp;&amp; meta.attr(<span class="string">"http-equiv"</span>).equals(<span class="string">"refresh"</span>)) &#123;</span><br><span class="line">            String content = meta.attr(<span class="string">"content"</span>);</span><br><span class="line">            <span class="keyword">if</span> (content.contains(<span class="string">"url"</span>)) &#123;</span><br><span class="line">                url = <span class="keyword">new</span> URL(content.split(<span class="string">";"</span>)[<span class="number">1</span>].substring(<span class="string">"url="</span>.length()));</span><br><span class="line">                needRefresh = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    connection.disconnect();</span><br><span class="line">&#125; <span class="keyword">while</span> (needRefresh);</span><br></pre></td></tr></table></figure>
<p>这样程序就可以处理大多数网页了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tomcat中的默认编码问题]]></title>
      <url>http://jiashuai.me/2015/03/18/Tomcat%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>前段时间做了一个小项目，需要获取一个网页的HTML源码，然后在服务器上保存交给另一个数学模型处理。模型在单独测试的时候没出现什么问题，但是放到Tomcat中就突然出现了莫名其妙的错误。因为需要处理中文，经师兄提醒可能是编码的问题，于是设断<br>点到程序中查看，果然是，所有中文都变成了乱码。</p>
<a id="more"></a>
<p>首先，我想看看本地和Tomcat中的默认编码有什么不同，于是写了一行代码<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Charset.defaultCharset().displayName();</span><br></pre></td></tr></table></figure></p>
<p>果然，在本地的输出是<code>UTF-8</code>，在tomcat中的输出是<code>US-ASCII</code>。</p>
<p>既然在本地测试可以，说明读写文件的时候只要指定正确的编码方式就好了，而不是使用系统默认的。</p>
<p>指定方式如下，假定要读写的文件是file，要指定的编码是<code>UTF-8</code><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner = <span class="keyword">new</span> Scanner(file, <span class="string">"UTF-8"</span>);</span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> Buffered(<span class="keyword">new</span> InputStreamReader(file, <span class="string">"UTF-8"</span>));</span><br><span class="line">PrintWriter writer = <span class="keyword">new</span> PrintWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(saveFile), <span class="string">"UTF-8"</span>));</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Remove Element]]></title>
      <url>http://jiashuai.me/2014/12/29/Remove%20Element/</url>
      <content type="html"><![CDATA[<p>移除list中指定元素，移除后不要求保持顺序，题目的主要要求在于原地修改，即in place<br><a id="more"></a></p>
<p>可以借鉴堆排的想法，把最后一个元素拿过来覆盖掉要移除的元素，然后把list长度减一</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__author__ = <span class="string">'shijiashuai'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="comment"># @param    A       a list of integers</span></span><br><span class="line">    <span class="comment"># @param    elem    an integer, value need to be removed</span></span><br><span class="line">    <span class="comment"># @return an integer</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeElement</span><span class="params">(self, A, elem)</span>:</span></span><br><span class="line">        length = len(A)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">            <span class="keyword">while</span> A[i] == elem <span class="keyword">and</span> i &lt; length:</span><br><span class="line">                length -= <span class="number">1</span></span><br><span class="line">                A[i] = A[length]</span><br><span class="line">        <span class="keyword">return</span> length</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Remove Duplicates from Sorted Array]]></title>
      <url>http://jiashuai.me/2014/12/28/Remove%20Duplicates%20from%20Sorted%20Array/</url>
      <content type="html"><![CDATA[<p>一开始没看懂题目，原来要修改传入的A数组然后返回修改后的A数组长度</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__author__ = <span class="string">'shijiashuai'</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="comment"># @param a list of integers</span></span><br><span class="line">    <span class="comment"># @return an integer</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeDuplicates</span><span class="params">(self, A)</span>:</span></span><br><span class="line">        num = <span class="keyword">None</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> A:</span><br><span class="line">            <span class="keyword">if</span> n != num:</span><br><span class="line">                A[count] = n</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                num = n</span><br><span class="line">        <span class="keyword">return</span> count</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Valid Parentheses]]></title>
      <url>http://jiashuai.me/2014/12/28/Valid%20Parentheses/</url>
      <content type="html"><![CDATA[<p>经典栈应用</p>
<a id="more"></a>
<p>扫描串，遇到左括号就把它入栈，遇到右括号就从栈中弹出一个括号看是否配对，如果不配对或者此时栈空，返回False</p>
<p>如果扫描完成后栈中还有元素，返回False</p>
<p>扫描完后栈空，返回True</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__author__ = <span class="string">'shijiashuai'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="comment"># @return a boolean</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isValid</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        stack = []</span><br><span class="line">        match = &#123;</span><br><span class="line">            <span class="string">')'</span>: <span class="string">'('</span>,</span><br><span class="line">            <span class="string">']'</span>: <span class="string">'['</span>,</span><br><span class="line">            <span class="string">'&#125;'</span>: <span class="string">'&#123;'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> ch <span class="keyword">in</span> [<span class="string">'('</span>, <span class="string">'['</span>, <span class="string">'&#123;'</span>]:</span><br><span class="line">                stack.append(ch)</span><br><span class="line">            <span class="keyword">elif</span> <span class="keyword">not</span> stack <span class="keyword">or</span> match[ch] != stack.pop():</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">if</span> stack:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Remove Nth Node From End of List]]></title>
      <url>http://jiashuai.me/2014/12/28/Remove%20Nth%20Node%20From%20End%20of%20List/</url>
      <content type="html"><![CDATA[<p>一道关于链表操作的题目，很有意思。题目要求我们移除链表的倒数第n个元素，遍历一遍就要完成。</p>
<a id="more"></a>
<p>关键的问题就在于，链表有多少个元素，我们在一开始是不知道的，难道必须要扫描到结尾然后倒着往回找第n个元素删除吗？</p>
<p>其实完全可以不用倒回来，我们可以这样想：</p>
<p>假设链表一共有x个元素，倒数第n个元素也就是正数第x-n+1个元素。x的数值我们可以遍历一次得到，既然n是事先知道的，那么x-n+1个元素也一定可以遍历一次得到，方法如下：</p>
<ol>
<li>设置两个指针，分别为fast和slow，让他们等于链表头head</li>
<li>把fast向后移动n次</li>
<li>这时让fast和slow一起向后移动，直至fast到达链表尾<br>这样slow就指向了第x-n+1个元素的前一个元素了，也就是第x-n个元素，我们只要让 slow.next = slow.next.next 就可以了</li>
</ol>
<p>注意如果要移除的是倒数第x个元素，也就是要删除链表头时，只要判断一下返回head.next即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__author__ = <span class="string">'shijiashuai'</span></span><br><span class="line"><span class="comment"># # Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="comment"># @return a ListNode</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeNthFromEnd</span><span class="params">(self, head, n)</span>:</span></span><br><span class="line">        fast = slow = head</span><br><span class="line">        <span class="comment"># jump n times</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, n):</span><br><span class="line">            fast = fast.next</span><br><span class="line">        <span class="comment"># if the node to remove is the first one</span></span><br><span class="line">        <span class="keyword">if</span> fast <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> head.next</span><br><span class="line">        <span class="keyword">while</span> fast.next <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            fast = fast.next</span><br><span class="line">            slow = slow.next</span><br><span class="line">        slow.next = slow.next.next</span><br><span class="line">        <span class="keyword">return</span> head</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在Ubuntu上搭建PPTP VPN服务器]]></title>
      <url>http://jiashuai.me/2014/12/27/%E5%9C%A8Ubuntu%E4%B8%8A%E6%90%AD%E5%BB%BAPPTP%20VPN%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>如果你有一台在境外的VPS，按照本教程设置好PPTP服务器就可以通过它访问任何你想去的网站啦。</p>
<a id="more"></a>
<h3 id="1-安装pptpd"><a href="#1-安装pptpd" class="headerlink" title="1.安装pptpd"></a>1.安装pptpd</h3><p>输入以下命令即可</p>
<pre>sudo apt-get install pptpd</pre>

<h3 id="2-设置pptp"><a href="#2-设置pptp" class="headerlink" title="2.设置pptp"></a>2.设置pptp</h3><p>打开<code>pptpd-options</code></p>
<pre>sudo vim /etc/ppp/pptpd-options</pre>

<p>找到以下三行<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">refuse-pap</span><br><span class="line">refuse-chap</span><br><span class="line">refuse-mschap</span><br></pre></td></tr></table></figure></p>
<p>加“#”号注释掉，像这样<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#refuse-pap</span><br><span class="line">#refuse-chap</span><br><span class="line">#refuse-mschap</span><br></pre></td></tr></table></figure></p>
<p>在文件最后添加下面的两行，用来配置DNS服务器，这里我选用了Google的DNS，也可以改成自己喜欢的<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ms-dns 8.8.8.8</span><br><span class="line">ms-dns 8.8.4.4</span><br></pre></td></tr></table></figure></p>
<p>保存退出</p>
<h3 id="3-设置网络地址"><a href="#3-设置网络地址" class="headerlink" title="3.设置网络地址"></a>3.设置网络地址</h3><p>打开<code>pptpd.conf</code></p>
<p><pre>sudo vim /etc/pptpd.conf</pre><br>在最后加上以下内容<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">localip YOUR_IP_ADDRESS</span><br><span class="line">remoteip 192.168.0.100-254</span><br></pre></td></tr></table></figure></p>
<p>把<code>YOUR_IP_ADDRESS</code>替换成你的服务器的ip地址，比如我的是<code>104.236.156.229</code></p>
<p><code>remoteip</code>是你要分配出去的ip地址范围，按自己喜好填就好</p>
<p>添加完成以后保存退出</p>
<h3 id="4-添加自己的vpn账户"><a href="#4-添加自己的vpn账户" class="headerlink" title="4.添加自己的vpn账户"></a>4.添加自己的vpn账户</h3><p>打开<code>chap-secrets</code></p>
<p><pre>sudo vim /etc/ppp/chap-secrets</pre><br>按以下格式添加账户，一行一个，注意空格</p>
<p><pre>[Username] [Service] [Password] [Allowed IP Address]</pre><br>比如</p>
<p><pre>ss pptpd sspwd *</pre><br>保存退出，然后重启pptpd</p>
<p><pre>sudo /etc/init.d/pptpd restart</pre></p>
<h3 id="5-设置ipv4包转发"><a href="#5-设置ipv4包转发" class="headerlink" title="5.设置ipv4包转发"></a>5.设置ipv4包转发</h3><p>打开<code>sysctl.conf</code></p>
<p><pre>sudo vim /etc/sysctl.conf</pre><br>找到这一行，把注释的“#”号去掉</p>
<p><pre>#net.ipv4.ip_forward=1</pre><br>改成像这样</p>
<p><pre>net.ipv4.ip_forward=1</pre><br>保存退出，然后重新加载这个系统服务</p>
<p><pre>sudo sysctl -p</pre></p>
<h3 id="6-设置NAT规则"><a href="#6-设置NAT规则" class="headerlink" title="6.设置NAT规则"></a>6.设置NAT规则</h3><p><pre>sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE</pre><br>注意：如果你在第三部设置了跟我不一样的remoteip，那么这里也要作相应的更改。</p>
<p><strong>至此，PPTP VPN服务器就已经架好了。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Longest Common Prefix]]></title>
      <url>http://jiashuai.me/2014/12/26/Longest%20Common%20Prefix/</url>
      <content type="html"><![CDATA[<p>第一次提交，没想到strs是空的情况（我直接取了strs的第一个元素）<br>第二次提交，没想到strs的第一个串可能不是最短的。</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__author__ = <span class="string">'shijiashuai'</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="comment"># @return a string</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(self, strs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> strs == []:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">        prefix = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i, ch <span class="keyword">in</span> enumerate(strs[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">for</span> s <span class="keyword">in</span> strs[<span class="number">1</span>:]:</span><br><span class="line">                <span class="keyword">if</span> len(s) &lt; i+<span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">return</span> prefix</span><br><span class="line">                <span class="keyword">if</span> s[i] != ch:</span><br><span class="line">                    <span class="keyword">return</span> prefix</span><br><span class="line">            prefix += ch</span><br><span class="line">        <span class="keyword">return</span> prefix</span><br><span class="line">s = Solution()</span><br><span class="line"><span class="keyword">print</span> s.longestCommonPrefix([<span class="string">'a'</span>,<span class="string">'abc'</span>,<span class="string">'ab'</span>])</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Roman to Integer]]></title>
      <url>http://jiashuai.me/2014/12/26/Roman%20to%20Integer/</url>
      <content type="html"><![CDATA[<p>罗马数字转成int，只要知道罗马数字的规则就可以了，没什么难度</p>
<a id="more"></a>
<p>罗马数字规则参见<a href="http://zh.wikipedia.org/wiki/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97" target="_blank" rel="external">维基百科</a></p>
<p>python里面没有switch语句，我使用了dictionary和匿名lambda函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__author__ = <span class="string">'shijiashuai'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="comment"># @return an integer</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">romanToInt</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        dic = &#123;</span><br><span class="line">            <span class="string">'I'</span>: <span class="keyword">lambda</span> i: <span class="number">-1</span> <span class="keyword">if</span> s[i + <span class="number">1</span>] <span class="keyword">in</span> [<span class="string">'V'</span>, <span class="string">'X'</span>] <span class="keyword">else</span> <span class="number">1</span>,</span><br><span class="line">            <span class="string">'X'</span>: <span class="keyword">lambda</span> i: <span class="number">-10</span> <span class="keyword">if</span> s[i + <span class="number">1</span>] <span class="keyword">in</span> [<span class="string">'L'</span>, <span class="string">'C'</span>] <span class="keyword">else</span> <span class="number">10</span>,</span><br><span class="line">            <span class="string">'C'</span>: <span class="keyword">lambda</span> i: <span class="number">-100</span> <span class="keyword">if</span> s[i + <span class="number">1</span>] <span class="keyword">in</span> [<span class="string">'D'</span>, <span class="string">'M'</span>] <span class="keyword">else</span> <span class="number">100</span>,</span><br><span class="line">            <span class="string">'V'</span>: <span class="keyword">lambda</span> i: <span class="number">5</span>,</span><br><span class="line">            <span class="string">'L'</span>: <span class="keyword">lambda</span> i: <span class="number">50</span>,</span><br><span class="line">            <span class="string">'D'</span>: <span class="keyword">lambda</span> i: <span class="number">500</span>,</span><br><span class="line">            <span class="string">'M'</span>: <span class="keyword">lambda</span> i: <span class="number">1000</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        x = <span class="number">0</span></span><br><span class="line">        s += <span class="string">'@'</span></span><br><span class="line">        <span class="keyword">for</span> i, ch <span class="keyword">in</span> enumerate(s[:<span class="number">-1</span>]):</span><br><span class="line">            x += dic[ch](i)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">s = Solution()</span><br><span class="line"><span class="keyword">print</span> s.romanToInt(<span class="string">'MCMLXXVI'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Palindrome Number]]></title>
      <url>http://jiashuai.me/2014/12/26/Palindrome%20Number/</url>
      <content type="html"><![CDATA[<p>简单题，只是题目要求不能使用额外的空间，也就是说就不能把int转成string这样处理</p>
<p>所有负整数都不算作回文数</p>
<p>用整除和取模把每一位提取出来判断就可以了</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__author__ = <span class="string">'shijiashuai'</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self,x)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        l = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> x / l &gt; <span class="number">9</span>:</span><br><span class="line">            l *= <span class="number">10</span></span><br><span class="line">        r = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> x / l % <span class="number">10</span> == x / r % <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">if</span> l == r <span class="keyword">or</span> l == r * <span class="number">10</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">            l /= <span class="number">10</span></span><br><span class="line">            r *= <span class="number">10</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">s = Solution()</span><br><span class="line"><span class="keyword">print</span> s.isPalindrome(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[怎样在Ubuntu14.04上安装Linux,Apache,MySQL,PHP(LAMP)]]></title>
      <url>http://jiashuai.me/2014/12/21/%E6%80%8E%E6%A0%B7%E5%9C%A8Ubuntu14.04%E4%B8%8A%E5%AE%89%E8%A3%85Linux,Apache,MySQL,PHP(LAMP)/</url>
      <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>一个“LAMP”栈是一组通常安装在一起的开源软件，它可以让一台服务器运行动态网站和web应用。LAMP这个术语实际上是一个首字母缩略词，他们分别代表了Linux操作系统，Apache web服务器，存储网站数据的MySQL数据库和处理动态内容的PHP。</p>
<p>在这个教程里，我们将会在Ubuntu 14.04上安装LAMP栈，Ubuntu将会实现我们的第一个需求：一个Linux操作系统。</p>
<a id="more"></a>
<ul>
<li><h3 id="第一步——安装Apache"><a href="#第一步——安装Apache" class="headerlink" title="第一步——安装Apache"></a>第一步——安装Apache</h3><p>  Apache 是世界上最流行的Web服务器，它是一个不错的选择。</p>
<p>  我们可以利用Ubuntu的包管理器（package manager）——apt轻易地安装Apache。包管理器可以让我们很轻松地从Ubuntu维护的仓库（repository）中安装大多数软件。</p>
<p>  要实现我们的目标，我们可以从键入以下命令开始：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install apache2</span><br></pre></td></tr></table></figure>
<p>  由于我们使用了sudo命令，这些操作将会以root权限执行。系统会让你键入当前用户的密码来核对你的意图。</p>
<p>  然后，你的Web服务器就安装完成了。</p>
<p>  你可以立即检查一下这些事情是不是真的做好了，只要在浏览器中输入你的服务器的地址（译者注：如果是本地服务器，输入<code>http://localhost</code>即可）</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://your_server_IP_address</span><br></pre></td></tr></table></figure>
<p>  你将会看到一个默认的Ubuntu 14.04 Apache Web服务器页面，这个页面是用来提供信息和测试的。它应该看起来像这样：</p>
<p>  <img src="/img/default_apache.png" alt="default_apache"></p>
<p>  如果你看到了这个页面，那么你的web服务器现在已经被正确安装了。</p>
</li>
<li><h3 id="第二步——安装MySQL"><a href="#第二步——安装MySQL" class="headerlink" title="第二步——安装MySQL"></a>第二步——安装MySQL</h3><p>  既然我们已经安装好web服务器并且成功运行，是时候安装MySQL了。MySQL是数据库管理系统。从根本上说，我们的网站能够存储数据的数据库就是由它组织和提供的。</p>
<p>  我们再次使用<code>apt</code>来获取和安装软件。这一次我们还会安装一些其他的辅助包，这些包会让我们的组件之间相互交流：<br>  <pre>sudo apt-get install mysql-server php5-mysql</pre><br>  注意：这一次你不必在指令之前运行<code>sudo apt-get update</code>，这是因为我们在上面安装Apache的时候已经运行过一次这个指令了，所以我们电脑中的包索引应该已经是最新的了。</p>
<p>  在安装过程中，你的系统会要求你输入并确认MySQL的root用户密码。这是一个MySQL的管理用户，他拥有最高的权限。你要像思考这个系统的root用户密码一样认真考虑它一下（不过这次你要配置的是MySQL的特定账户）</p>
<p>  当安装完成的时候，我们需要运行一些额外的命令来让我们的MySQL环境更安全。</p>
<p>  首先，我们需要告诉MySQL创建它的数据库目录结构（database directory structure），MySQL会把数据存放在这里。你可以键入以下命令：<br>  <pre>sudo mysql_install_db</pre><br>  然后，我们想要运行一个简单的安全脚本来移除一些危险的默认值，并且稍稍加锁我们的数据库系统。运行下面的命令来启动这个互动脚本：<br>  <pre>sudo mysql_secure_installation</pre><br>  系统会要求你输入你设置的MySQL的root账户的密码，接下来，它会问你是否想要修改这个密码。如果你对当前的密码感到满意，对这个提示说“n”或者“no”吧。</p>
<p>  对于剩下的问题，你可以按”ENTER”来接受每个建议的默认值，这会溢出一些简单的用户和数据库，关闭远程root登录，并且加载这些新规则，所以MySQL会立即接受我们所做的这些更改。</p>
<p>  到这里，你的数据库系统已经成功建立，我们可以继续了。</p>
</li>
<li><h3 id="第三步——安装PHP"><a href="#第三步——安装PHP" class="headerlink" title="第三步——安装PHP"></a>第三步——安装PHP</h3><p>  PHP会运行一些代码来显示动态内容，这也是我们配置的一部分。它会运行脚本，连接到MySQL数据库服务器来获取信息，并且把这些处理过的内容递给我们的web服务器显示。</p>
<p>  我们可以再一次利用<code>apt</code>系统来安装我们的组件。我们也会先安装一些辅助组件：<br>  <pre>sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt</pre><br>  这将会直接安装PHP，马上我们就会测试它。</p>
<p>  在大多数情况下，当一个目录被请求时，我们想修改Apache提供文件的方式。目前，如果一个用户向服务器请求一个目录，Apache会寻找一个称为<code>index.html</code>的文件。我们想告诉我们的web服务器让它更偏好PHP文件，所以我们想让Apache首先寻找<code>index.php</code>文件。</p>
<p>  要做到这些，键入这个命令来用一个文本编辑器打开dir.conf文件，而且是以管理员权限打开的：<br>  <pre>sudo nano /etc/apache2/mods-enabled/dir.conf</pre><br>  它将看起来像这样:</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;IfModule mod_dir.c&gt;</span><br><span class="line">    DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm</span><br><span class="line">                                                 ⬆️here</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>
<p>  我们想把那个箭头所指的的<code>index.php</code>移到DirectoryIndex后面去，像这样：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;IfModule mod_dir.c&gt;</span><br><span class="line">    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm</span><br><span class="line">                   ⬆️move to here</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>
<p>  当你做完了这些时，用<code>CTRL+X</code>快捷键来保存并退出这个文件。你将要输入“Y”来确认这次保存，并且按下<code>ENTER</code>来确认保存的位置。</p>
<p>  在这之后，我们需要重启Apache web服务器来让它识别我们的改动。你可以输入以下命令来重启：<br>  <pre>sudo service apache2 restart</pre><br>  至此，你的LAMP栈就已经安装并配置完成了，让我们来测试一下PHP。</p>
</li>
<li><h3 id="第四步——在web服务器上测试PHP的处理"><a href="#第四步——在web服务器上测试PHP的处理" class="headerlink" title="第四步——在web服务器上测试PHP的处理"></a>第四步——在web服务器上测试PHP的处理</h3><p>  为了测试我们的系统是否成功配置了PHP，我们可以创建一个非常简单的PHP脚本。</p>
<p>  我们会把这个脚本叫做<code>info.php</code>。为了让Apache正确地找到并且提供这个文件，它必须被放在一个叫做<code>web root</code>的特定目录里。</p>
<p>  在Ubuntu 14.04中，这个目录位于/var/www/html/。我们可以输入一下命令来在这个目录中创建一个文件：<br>  <pre>sudo nano /var/www/html/info.php</pre><br>  这将会打开一个空文件，我们想向其中添加以下的有效的PHP代码:</p>
  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>  当你做完了这些，保存并关闭这个文件。</p>
<p>  现在我们可以测试我们的web服务器是不是能够正确地显示由PHP脚本生成的内容了。为此，我们只需在我们的浏览器中访问这个页面。你会再次用到你的公网IP地址。</p>
<p>  我们要访问的地址是：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://your_server_IP_address/info.php</span><br></pre></td></tr></table></figure>
<p>  你要到达的这个页面看起来会像这样：</p>
<p>  <img src="/img/default_php.png" alt="default_php"></p>
<p>  这个页面从PHP这个方面给了你关于你服务器的信息。它在调试和确认你的设置已经正确应用时很有用。</p>
<p>  如果你看到了上面的页面，那么你的PHP是在如期工作着的。</p>
<p>  也许你在这之后想要移除这个文件，因为它实际上把关于你服务器的信息给了未授权的使用者。为此，你可以输入这些：<br>  <pre>sudo rm /var/www/html/info.php</pre><br>  如果你以后想要获取这些信息，你总是可以重新创建这个页面。</p>
</li>
</ul>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>既然你已经成功安装了LAMP栈，下一步你将会有很多选择。从根本上说，你已经安装好了能够让你在服务器上安装许多种站点和网页软件的平台。</strong></p>
<p>原文链接：<br><a href="https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-14-04" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-14-04</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[String to Integer]]></title>
      <url>http://jiashuai.me/2014/12/19/String%20to%20Integer/</url>
      <content type="html"><![CDATA[<p>很简单的一道题，只是考验细节</p>
<a id="more"></a>
<ol>
<li>空字符串</li>
<li>去掉串首的空格</li>
<li>如果有+-号，需要忽略或记录</li>
<li>从下一位开始转换数字</li>
<li>转换结果溢出判断</li>
</ol>
<p>代码写得比较丑。。特殊情况挺多的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">atoi</span><span class="params">(self, str)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> str == <span class="string">''</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> str[i] == <span class="string">' '</span>:</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        str = str[i:]</span><br><span class="line">        i = len(str) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> str[i] == <span class="string">' '</span>:</span><br><span class="line">            i -= <span class="number">1</span></span><br><span class="line">        str = str[:i+<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> str[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'0'</span>]:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> str[<span class="number">1</span>:]:</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'0'</span>]:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        str = str[:i+<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> str[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            x = <span class="number">-1</span></span><br><span class="line">            str = str[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">elif</span> str[<span class="number">0</span>] == <span class="string">'+'</span>:</span><br><span class="line">            x = <span class="number">1</span></span><br><span class="line">            str = str[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            x = <span class="number">1</span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> str:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ch <span class="keyword">in</span> [<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'0'</span>]:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            ans = <span class="number">10</span> * ans + int(ch)</span><br><span class="line">        <span class="keyword">if</span> x * ans &gt; (<span class="number">1</span> &lt;&lt; <span class="number">31</span>) - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> (<span class="number">1</span> &lt;&lt; <span class="number">31</span>) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> x * ans &lt; <span class="number">-1</span> * (<span class="number">1</span> &lt;&lt; <span class="number">31</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span> * (<span class="number">1</span> &lt;&lt; <span class="number">31</span>)</span><br><span class="line">        <span class="keyword">return</span> x * ans</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Reverse Integer]]></title>
      <url>http://jiashuai.me/2014/12/19/Reverse%20Integer/</url>
      <content type="html"><![CDATA[<p>很简单的题目</p>
<a id="more"></a> 
<p>第一次提交出错了 因为题目中说如果逆序后的数溢出了，需要返回0<br>改了又错了 位运算的优先级居然比加减法还要低</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        s = str(x)</span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            s = s[<span class="number">1</span>:len(s)]</span><br><span class="line">        s = s[::<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            s = <span class="string">'-'</span> + s</span><br><span class="line">        ans = int(s)</span><br><span class="line">        <span class="keyword">if</span> ans &gt; (<span class="number">1</span> &lt;&lt; <span class="number">31</span>) - <span class="number">1</span> <span class="keyword">or</span> ans &lt; - (<span class="number">1</span> &lt;&lt; <span class="number">31</span>):</span><br><span class="line">            ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>
<p>在Discuss里还看到一个很简单的写法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> (<span class="number">-1</span> <span class="keyword">if</span> x &lt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">1</span>) * int(str(abs(x))[::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ZigZag Conversion]]></title>
      <url>http://jiashuai.me/2014/12/19/ZigZag%20Conversion/</url>
      <content type="html"><![CDATA[<p>看了题解。。直接模拟最简单。。多占一点空间</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(self, s, nRows)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> nRows == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        num = <span class="number">2</span> * nRows - <span class="number">2</span></span><br><span class="line">        answer = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">        line = s[<span class="number">0</span>::num]</span><br><span class="line">        answer += <span class="string">''</span>.join(line)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, nRows - <span class="number">1</span>):</span><br><span class="line">            line1 = s[i::num]</span><br><span class="line">            line2 = s[num - i::num]</span><br><span class="line">            line = [x , ]</span><br><span class="line">            x = i</span><br><span class="line">            y = num - i</span><br><span class="line">            <span class="keyword">while</span> x &lt; len(s):</span><br><span class="line">                answer += s[x]</span><br><span class="line">                <span class="comment"># There may be an x while y is absent, so we should determine seperately</span></span><br><span class="line">                <span class="keyword">if</span> y &lt; len(s):</span><br><span class="line">                    answer += s[y]</span><br><span class="line">                x += num</span><br><span class="line">                y += num</span><br><span class="line"></span><br><span class="line">        line = s[nRows - <span class="number">1</span>::num]</span><br><span class="line">        answer += <span class="string">''</span>.join(line)</span><br><span class="line">        <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
  
  
</search>
